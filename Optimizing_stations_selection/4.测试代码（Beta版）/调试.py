import numpy as np
import matplotlib.pyplot as plt

def point_draw_GDOP(n,i):
    """
    绘制选取完后的测站gdop图

    data_dict ：未添加测站的测站数据
    data_dict0：添加完测站后的测站数据
    n1：gdop评测列表结果

    i：添加的测站数
    
    """
     # 设置字体为宋体，防止中文标签不显示
    plt.rcParams['font.sans-serif'] = ['STzhongsong']
    # 设置正常显示负号
    plt.rcParams['axes.unicode_minus'] = False
   # 二维：定义横坐标列表
    x = list(range(10, 10*i+10,10))
    

    fig, ax = plt.subplots() # 创建一个图形和一个子图对象
    ax.set_prop_cycle(color = ['red', 'green', 'blue', 'cyan', 'magenta', 'yellow', 'black']) # 设置一个颜色循环器
    ax.plot(x,n[0], label='0.1*0.1') # 绘制第二条曲线，并设置标签
    ax.plot(x, n[1], label='0.5*0.5') # 绘制第一条曲线，并设置标签
    ax.plot(x,n[2], label='1*1') # 绘制第二条曲线，并设置标签
    ax.plot(x, n[3], label='1.5*1.5') # 绘制第三条曲线，并设置标签
    ax.plot(x,n[4], label='2*2') # 绘制第二条曲线，并设置标签

    ax.plot(x,n[5], label='3*3') # 绘制第二条曲线，并设置标签
    ax.plot(x,n[6], label='18*18') # 绘制第二条曲线，并设置标签
    ax.set_xlabel('引入的非核心测站数') # 设置横轴标签
    ax.set_ylabel('gdop值') # 设置纵轴标签
    ax.set_title('gdop值图') # 设置标题
    ax.legend(loc='best') # 显示图例，并自动选择最佳位置

    plt.show() # 显示图形

a0=[1.013246214086136, 0.7143544523496949, 0.5829731127570172, 0.5041228965910353, 0.45344283974642785, 0.414424983058964, 0.38647503921847853, 0.3594606617037251, 0.3373203088625454, 0.3241482275481302]
lst =[[1.008188497553151, 0.7148317276358739, 0.5840490421797575, 0.505054195415287, 0.4508741365092662, 0.41653335525528035, 0.3836280183597193, 0.35826375781427516, 0.3373999002793922, 0.3239318167769325],
[1.021601101147146, 0.7108237042274889, 0.5837433664677149, 0.5064759391268897, 0.45452835473538955, 0.4130057226093346, 0.3848757134204739, 0.3613860792141258, 0.3415427847828128, 0.3222060032614361],
[1.0188543587189005, 0.7144657964965034, 0.5818167743874427, 0.5045535075702932, 0.45373763172007553, 0.41616087462010676, 0.38475121608873203, 0.36112141726180585, 0.34124108374674383, 0.3227291673379024],
[1.0136070375023989, 0.712876319048687, 0.5826817077875385, 0.5069926074609629, 0.4530111351652668, 0.41469727335390033, 0.3831099090283951, 0.3613447484738863, 0.3411187873157922, 0.3248276690010243],
[1.0136070375023989, 0.712876319048687, 0.5826817077875385, 0.5069926074609629, 0.4530111351652668, 0.41469727335390033, 0.3831099090283951, 0.3613447484738863, 0.3411187873157922, 0.3248276690010243],
[1.020024551272055, 0.7142265539154137, 0.5852370126473118, 0.5059376446423567, 0.4513339814423053, 0.4138690712020803, 0.3823618386410888, 0.36047734739210024, 0.342512816356656, 0.3241297331639339],
[1.0121612376254807, 0.7179203603843204, 0.5862756491842599, 0.5064956867821162, 0.4520176956134738, 0.4160213378295191, 0.3827398221368653, 0.3607552329832679, 0.3375950472061537, 0.323867098193528]]
for i in range(0, len(lst)):
    # 遍历每个列表中的每个元素
    for j in range(len(lst[i])):
        # 将元素减去a列表中对应位置的元素
        lst[i][j] -= a0[j]
point_draw_GDOP(lst,10)
print(lst)

"""

[0.39872659040971226, 0.3708708739223261, 0.3484263862204331, 0.32948434700694296, 0.3136922689242559, 0.2999305271515675, 0.28808644617131, 0.2774598361374368, 0.2685512017526792, 0.25979240553410893],
        [0.398818284112932, 0.37115403522423523, 0.34846111353915254, 0.3301051804841333, 0.3135446164959697, 0.3000661660992325, 0.2885528445629908, 0.2776823745006198, 0.26860216678732957, 0.25940535819578714],
        [0.3988190810784042, 0.37059207891892487, 0.34816839850254316, 0.3292858758010004, 0.31414179930108294, 0.3000981671035785, 0.2883157980711382, 0.2781498116756499, 0.26757447027685155, 0.2593028562614787],
        [0.3989711288584691, 0.370988046840769, 0.3484674468132087, 0.3293751208606805, 0.31392984265576834, 0.2999593395787129, 0.28835318467138393, 0.2782691054282342, 0.2680697384785119, 0.2592877792299247],
        [0.39881777367621485, 0.3705567337295668, 0.34860964821309703, 0.3295568147586819, 0.3136798407507961, 0.3000614207661752, 0.2882815928162429, 0.2778221237878501, 0.26745223818570224, 0.2595637878851666],
       [0.39879108114883366, 0.3708509219545819, 0.34857784751879856, 0.32947020127801185, 0.3137287617703333, 0.2996583701107618, 0.2878939059657481, 0.2777636618062745, 0.2673416900591395, 0.2588374559964559]

        [0.398695085566775, 0.3705771286392188, 0.3479360392937722, 0.3290916345940691, 0.3137328478319296, 0.300475063804368, 0.28814479596921355, 0.27787284445268146, 0.26815627737405046, 0.2593837092464348],
        [0.3988325028822609, 0.3708665991924572, 0.34805494484657, 0.32916718744754736, 0.3135078495107546, 0.29982138097258315, 0.28811562463303486, 0.27712323343667333, 0.2685139770712272, 0.26000992952976726]]


[1.008188497553151, 0.7148317276358739, 0.5840490421797575, 0.505054195415287, 0.4508741365092662, 0.41653335525528035, 0.3836280183597193, 0.35826375781427516, 0.3373999002793922, 0.3239318167769325],
[1.021601101147146, 0.7108237042274889, 0.5837433664677149, 0.5064759391268897, 0.45452835473538955, 0.4130057226093346, 0.3848757134204739, 0.3613860792141258, 0.3415427847828128, 0.3222060032614361],
[1.0188543587189005, 0.7144657964965034, 0.5818167743874427, 0.5045535075702932, 0.45373763172007553, 0.41616087462010676, 0.38475121608873203, 0.36112141726180585, 0.34124108374674383, 0.3227291673379024],
1.5[1.0136070375023989, 0.712876319048687, 0.5826817077875385, 0.5069926074609629, 0.4530111351652668, 0.41469727335390033, 0.3831099090283951, 0.3613447484738863, 0.3411187873157922, 0.3248276690010243],
2[1.0136070375023989, 0.712876319048687, 0.5826817077875385, 0.5069926074609629, 0.4530111351652668, 0.41469727335390033, 0.3831099090283951, 0.3613447484738863, 0.3411187873157922, 0.3248276690010243],
[1.013246214086136, 0.7143544523496949, 0.5829731127570172, 0.5041228965910353, 0.45344283974642785, 0.414424983058964, 0.38647503921847853, 0.3594606617037251, 0.3373203088625454, 0.3241482275481302],
3[1.020024551272055, 0.7142265539154137, 0.5852370126473118, 0.5059376446423567, 0.4513339814423053, 0.4138690712020803, 0.3823618386410888, 0.36047734739210024, 0.342512816356656, 0.3241297331639339],
18[1.0121612376254807, 0.7179203603843204, 0.5862756491842599, 0.5064956867821162, 0.4520176956134738, 0.4160213378295191, 0.3827398221368653, 0.3607552329832679, 0.3375950472061537, 0.323867098193528],
"""